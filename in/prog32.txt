val sender = Module(Sender)
val receiver = Module(Receiver)
val middle1 = Module(Middle)
val middle2 = Module(Middle)
sender.out1 <> middle1.in
middle1.out <> receiver.in1
sender.out2 <> middle2.in
middle2.out <> receiver.in2

module Sender
int i,x
outstream out1
outstream out2
state 1
i = 0
goto 2

state 2
x = ((83*i)+52)%101
i = i + 1
goto Mux(i%2==0,3,4)

state 3 when out1.ready()
out1.write(x)
goto Mux(i < 10, 2, 99)

state 4 when out2.ready()
out2.write(x)
goto Mux(i < 10, 2, 99)

state 99
goto 99


module Middle
int x, i
instream in
state 1
goto 2

state 2 when in.valid()
x = in.read()
i = i+1
//goto 3
goto 5

state 5 when out.ready()
out.write(x)
goto 2

state 3
goto Mux(i < 10, 2, 4)

state 4
goto 4



module Receiver
int x1, x2,  i
int[10] data
instream in1
instream in2

state 1
i = 0
goto 2

state 2 when in1.valid()
x1 = in1.read()
i = i+1
goto 3

state 3
data[i-1]=x1
goto Mux(i < 10, 4, 99)

state 4 when in2.valid()
x2 = in2.read()
i = i+1
goto 5

state 5
data[i-1]=x2
goto Mux(i < 10, 2, 99)

state 99
goto 99